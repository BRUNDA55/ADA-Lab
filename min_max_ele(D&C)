#include<stdio.h>
#include<stdlib.h>
#include<time.h>
int count =0, rcall = 0;
int findmin(int *a, int low, int high)
{
	int t1, t2;
	if(low==high)
		return *(a+low);
	else
	{
		int mid;
		mid = (low+high)/2;
		t1 = findmin(a,low,mid);
		t2 = findmin(a,mid+1, high);
		rcall = rcall +2;
		count++;
		if(t1<t2)
			return t1;
		else return t2;
	}
}
int findmax(int *arr, int l, int r)
{
	int t1, t2;
	if(l == r)
		return *(arr+l);
	else
	{
		int m;
		m = (l+r)/2;
		t1 = findmax(arr,l,m);
		t2 = findmax(arr,m+1,r);
		rcall += 2;
		count++;
		if(t1>t2)
			return t1;
		else return t2;
	}
}
int main()
{
	int n, *a, i,res,t;
	FILE *fp1, *fp2;
	fp1 = fopen("mincount.txt","a");
	fp2 = fopen("mincalls.txt","a");
	printf("Enter no of times to run the program\n");
	scanf("%d",&t);
	while(t--)
	{
		printf("Enter array size \n");
		scanf("%d",&n);
		a = (int*)malloc(n*sizeof(int));
		srand(time(0));
		for(i=0;i<n;i++)
			*(a+i) = rand()%10000;
		res= findmin(a,0,n-1);
		printf("min = %d\n",res);
		printf("count = %d\n",count );
		printf("rcall = %d\n",rcall );
		fprintf(fp1, "%d %d\n",n,count );
		fprintf(fp2, "%d %d\n",n, rcall );

		a = (int*)malloc(n*sizeof(int));
		srand(time(0));
		for(i=0;i<n;i++)
			*(a+i) = rand()%10000;
		count =0;
		rcall = 0;
		printf("max = %d\n",findmax(a,0,n-1));
		printf("count = %d\n",count );
		printf("rcall = %d\n",rcall );
		count = rcall = 0;free(a);
	}
	return 0;
}
